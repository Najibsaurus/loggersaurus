var s=(o=>(o.INFO="INFO",o.WARN="WARN",o.ERROR="ERROR",o.DEBUG="DEBUG",o))(s||{});var r=class{constructor(t={}){this.service=t.service||"next-app";}log(t,i){let e={timestamp:new Date().toISOString(),level:t,service:this.service,action:i.action,details:i.details};if(process.env.NODE_ENV==="production")console.log(`[${e.level}] - ${JSON.stringify(e)}`);else {let o={INFO:"\x1B[34m",WARN:"\x1B[33m",ERROR:"\x1B[31m",DEBUG:"\x1B[35m",reset:"\x1B[0m"},n=o[t]||o.reset;console.log(`${n}[${e.level}]${o.reset} - ${e.action}`,e);}}info(t){this.log("INFO",t);}warn(t){this.log("WARN",t);}error(t){this.log("ERROR",t);}debug(t){this.log("DEBUG",t);}},p=new r({service:process.env.NEXT_PUBLIC_APP_NAME});export{s as LogLevel,r as Logger,p as logger};//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map